=== 面向文档的

应用里的对象很少只是一个简单的键值列表。通常他们是包含日期，地理位置，对象
或者值数组的复杂数据结构。

你早晚会想把这些对象存储在一个数据库里。把这些对象存储到关系数据库的行列里
就跟试图把有丰富表现力的对象挤进一个大的电子表格一样：你必须把对象扁平化去
适应表的模式 -- 通常是一个字段一列 -- 然后再你每次获取它的时候再重构它。

Elasticsearch是 _面向文档_ 的，这意味着它存储整个对象或者 _文档_ 。不只是仅
仅存储，Elasticsearch还要 *索引* 每个文档的内容使每个文档变得可查询。在Elasticsearch
里，你可以索引，查找，排序和过滤文档。。。，而不只是行和列的数据。这是Elasticsearch
在思考数据方面最基本的不同点，同时也是Elasticsearch能进行复杂的全文本搜索的
原因之一。

==== JSON

Elasticsearch使用 http://en.wikipedia.org/wiki/Json[_JSON_] (或者Javascript
对象表示法)作为文档的序列化格式。大部分语言都支持JSON序列化，JSON也成为了NoSQL
使用的标准格式。JSON简单明了，容易阅读。

下面的JSON文档表示的是一个用户对象：

[source,js]
--------------------------------------------------
{
    "email":      "john@smith.com",
    "first_name": "John",
    "last_name":  "Smith",
    "about": {
        "bio":         "Eco-warrior and defender of the weak",
        "age":         25,
        "interests": [ "dolphins", "whales" ]
    },
    "join_date": "2014/05/01",
}
--------------------------------------------------

虽然原始的 `用户` 对象是复杂的，对象的结构和意义以JSON的形式保存了。在Elasticsearch
里把一个对象转换成JSON来索引比转换成一个单调的表结构简单多了。

.把你的数据转换成JSON
**************************************************

几乎所有的语言都有把任意数据结构或者对象转换成JSON的模块，只不过每个语言的一些细节
不太一样。查看那些负责JSON __ ``serialization'' __ 或者  __ ``marshalling'' __ 的模
块 __. http://www.elasticsearch.org/guide[官方的Elasticsearch客户端]都支持对JSON的
来回自动转换。__


**************************************************
